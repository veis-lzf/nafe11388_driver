<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Adc_Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Adc_Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Sat Dec  2 23:23:01 2023
<BR><P>
<H3>Maximum Stack Usage =        344 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; nafe11388_startSample &rArr; NAFE_startSample &rArr; NAFE_mccrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5e]">ACC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">ACC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[5e]">ACC_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1c]">ADC1_2_3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from at32f435_437_int.o(.text.BusFault_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[20]">CAN1_SE_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4c]">CAN2_SE_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[f]">CRM_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[42]">DMA1_Channel1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[43]">DMA1_Channel2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[44]">DMA1_Channel3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[45]">DMA1_Channel4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[46]">DMA1_Channel5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4e]">DMA1_Channel6_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4f]">DMA1_Channel7_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[63]">DMA2_Channel1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[64]">DMA2_Channel2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[65]">DMA2_Channel3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[66]">DMA2_Channel4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[67]">DMA2_Channel5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[68]">DMA2_Channel6_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[69]">DMA2_Channel7_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5c]">DMAMUX_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[55]">DVP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from at32f435_437_int.o(.text.DebugMon_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[15]">EDMA_Stream1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[16]">EDMA_Stream2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[17]">EDMA_Stream3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[18]">EDMA_Stream4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[19]">EDMA_Stream5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1a]">EDMA_Stream6_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1b]">EDMA_Stream7_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[39]">EDMA_Stream8_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[47]">EMAC_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[48]">EMAC_WKUP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[33]">ERTCAlarm_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[d]">ERTC_WKUP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[10]">EXINT0_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[32]">EXINT15_10_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[11]">EXINT1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[12]">EXINT2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[13]">EXINT3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[14]">EXINT4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[21]">EXINT9_5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[56]">FPU_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at32f435_437_int.o(.text.HardFault_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2a]">I2C1_ERR_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[29]">I2C1_EVT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2c]">I2C2_ERR_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2b]">I2C2_EVT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[52]">I2C3_ERR_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[51]">I2C3_EVT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from at32f435_437_int.o(.text.MemManage_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at32f435_437_int.o(.text.NMI_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[4d]">OTGFS1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[34]">OTGFS1_WKUP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[54]">OTGFS2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[53]">OTGFS2_WKUP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from at32f435_437_int.o(.text.PendSV_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5b]">QSPI1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5a]">QSPI2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3b]">SDIO1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5d]">SDIO2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2e]">SPI2_I2S2EXT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3d]">SPI3_I2S3EXT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[59]">SPI4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at32f435_437_int.o(.text.SVC_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from at32f435_437_int.o(.text.SysTick_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[6b]">SystemInit</a> from system_at32f435_437.o(.text.SystemInit) referenced from startup_at32f435_437.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[25]">TMR1_CH_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[23]">TMR1_OVF_TMR10_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5f]">TMR20_BRK_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[62]">TMR20_CH_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[60]">TMR20_OVF_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[61]">TMR20_TRG_HALL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[26]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[27]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[28]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3c]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[40]">TMR6_DAC_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[41]">TMR7_GLOBAL_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[35]">TMR8_BRK_TMR12_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[38]">TMR8_CH_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[36]">TMR8_OVF_TMR13_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[37]">TMR8_TRG_HALL_TMR14_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[57]">UART7_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[58]">UART8_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[50]">USART6_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from at32f435_437_int.o(.text.UsageFault_Handler) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[3a]">XMC_IRQHandler</a> from startup_at32f435_437.o(.text) referenced from startup_at32f435_437.o(RESET)
 <LI><a href="#[6c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f435_437.o(.text)
 <LI><a href="#[6a]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[6d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b0]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b1]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b2]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b3]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b4]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>ACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMAMUX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DVP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EDMA_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EDMA_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EDMA_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EDMA_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EDMA_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EDMA_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EDMA_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>EDMA_Stream8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>EMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>EMAC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ERTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ERTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXINT15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C3_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTGFS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTGFS1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTGFS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>OTGFS2_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>QSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>QSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_I2S2EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_I2S3EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_OVF_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>TMR20_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TMR20_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TMR20_OVF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TMR20_TRG_HALL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TMR6_DAC_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TMR7_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TMR8_BRK_TMR12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TMR8_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR8_OVF_TMR13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TMR8_TRG_HALL_TMR14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>XMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f435_437.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[b8]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[b9]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[76]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[6e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[bb]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>NAFE_HAL_readRegBlock</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, bsp_nafe11388.o(.text.NAFE_HAL_readRegBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = NAFE_HAL_readRegBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_set_cs
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
</UL>

<P><STRONG><a name="[7e]"></a>NAFE_HAL_sendCmdBlock</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, bsp_nafe11388.o(.text.NAFE_HAL_sendCmdBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NAFE_HAL_sendCmdBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_set_cs
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sendCmdBlock
</UL>

<P><STRONG><a name="[7f]"></a>NAFE_HAL_writeRegBlock</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, bsp_nafe11388.o(.text.NAFE_HAL_writeRegBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = NAFE_HAL_writeRegBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_set_cs
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_writeRegBlock
</UL>

<P><STRONG><a name="[82]"></a>NAFE_init</STRONG> (Thumb, 576 bytes, Stack size 48 bytes, bsp_nafe11388.o(.text.NAFE_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = NAFE_init &rArr; NAFE_readRegBlock &rArr; NAFE_HAL_readRegBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_writeRegBlock
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_setChannel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_resetDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nafe11388_init
</UL>

<P><STRONG><a name="[92]"></a>NAFE_startSample</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, bsp_nafe11388.o(.text.NAFE_startSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = NAFE_startSample &rArr; NAFE_mccrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mccrBlock
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcmrBlock
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcsrBlock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sccrBlock
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_scsrBlock
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_setChannel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nafe11388_startSample
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>SPI_ReadWriteByte</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, bsp_spi.o(.text.SPI_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_sendCmdBlock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_readRegBlock
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_writeRegBlock
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SystemInit</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, system_at32f435_437.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f435_437_int.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f435_437.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>bsp_spi_config</STRONG> (Thumb, 600 bytes, Stack size 80 bytes, bsp_spi.o(.text.bsp_spi_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_spi_config &rArr; bsp_spi_gpio_config &rArr; gpio_pin_mux_config
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nafe11388_init
</UL>

<P><STRONG><a name="[7c]"></a>bsp_spi_set_cs</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_spi.o(.text.bsp_spi_set_cs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_spi_set_cs &rArr; gpio_bits_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_sendCmdBlock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_readRegBlock
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_writeRegBlock
</UL>

<P><STRONG><a name="[a8]"></a>crm_ahb_div_set</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_ahb_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_ahb_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[aa]"></a>crm_apb1_div_set</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_apb1_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_apb1_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a9]"></a>crm_apb2_div_set</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_apb2_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_apb2_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ab]"></a>crm_auto_step_mode_enable</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_auto_step_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_auto_step_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a6]"></a>crm_clock_source_enable</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, at32f435_437_crm.o(.text.crm_clock_source_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_clock_source_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a0]"></a>crm_flag_get</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, at32f435_437_crm.o(.text.crm_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_hext_stable_wait
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[9f]"></a>crm_hext_stable_wait</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, at32f435_437_crm.o(.text.crm_hext_stable_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = crm_hext_stable_wait &rArr; crm_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[97]"></a>crm_periph_clock_enable</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, at32f435_437_crm.o(.text.crm_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_config
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a7]"></a>crm_pll_config</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, at32f435_437_crm.o(.text.crm_pll_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_pll_config
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a5]"></a>crm_reset</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, at32f435_437_crm.o(.text.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ac]"></a>crm_sysclk_switch</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, at32f435_437_crm.o(.text.crm_sysclk_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_sysclk_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ad]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f435_437_crm.o(.text.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[9d]"></a>gpio_bits_reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at32f435_437_gpio.o(.text.gpio_bits_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_set_cs
</UL>

<P><STRONG><a name="[9e]"></a>gpio_bits_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at32f435_437_gpio.o(.text.gpio_bits_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_set_cs
</UL>

<P><STRONG><a name="[9a]"></a>gpio_default_para_init</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, at32f435_437_gpio.o(.text.gpio_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
</UL>

<P><STRONG><a name="[9b]"></a>gpio_init</STRONG> (Thumb, 232 bytes, Stack size 12 bytes, at32f435_437_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
</UL>

<P><STRONG><a name="[9c]"></a>gpio_pin_mux_config</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, at32f435_437_gpio.o(.text.gpio_pin_mux_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_pin_mux_config
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
</UL>

<P><STRONG><a name="[6a]"></a>main</STRONG> (Thumb, 96 bytes, Stack size 96 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = main &rArr; nafe11388_startSample &rArr; NAFE_startSample &rArr; NAFE_mccrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nafe11388_startSample
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nafe11388_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a3]"></a>nafe11388_init</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, nafe11388_if.o(.text.nafe11388_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = nafe11388_init &rArr; NAFE_init &rArr; NAFE_readRegBlock &rArr; NAFE_HAL_readRegBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_config
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>nafe11388_startSample</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, nafe11388_if.o(.text.nafe11388_startSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = nafe11388_startSample &rArr; NAFE_startSample &rArr; NAFE_mccrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_startSample
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>spi_default_para_init</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, at32f435_437_spi.o(.text.spi_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_config
</UL>

<P><STRONG><a name="[99]"></a>spi_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at32f435_437_spi.o(.text.spi_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_config
</UL>

<P><STRONG><a name="[93]"></a>spi_i2s_flag_get</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, at32f435_437_spi.o(.text.spi_i2s_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_i2s_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>

<P><STRONG><a name="[98]"></a>spi_init</STRONG> (Thumb, 502 bytes, Stack size 8 bytes, at32f435_437_spi.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_config
</UL>

<P><STRONG><a name="[a2]"></a>system_clock_config</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, at32f435_437_clock.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_auto_step_mode_enable
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_hext_stable_wait
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>system_core_clock_update</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, system_at32f435_437.o(.text.system_core_clock_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[bc]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[bd]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[be]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[95]"></a>bsp_spi_gpio_config</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, bsp_spi.o(.text.bsp_spi_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_spi_gpio_config &rArr; gpio_pin_mux_config
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_mux_config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_config
</UL>

<P><STRONG><a name="[83]"></a>NAFE_resetDevice</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_nafe11388.o(.text.NAFE_resetDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = NAFE_resetDevice &rArr; NAFE_sendCmdBlock &rArr; NAFE_HAL_sendCmdBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_delay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sendCmdBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_init
</UL>

<P><STRONG><a name="[84]"></a>NAFE_readRegBlock</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, bsp_nafe11388.o(.text.NAFE_readRegBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = NAFE_readRegBlock &rArr; NAFE_HAL_readRegBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_readRegBlock
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_combCmdForAccessRegs
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mccrBlock
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcmrBlock
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcsrBlock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sccrBlock
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_scsrBlock
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_startSample
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_init
</UL>

<P><STRONG><a name="[85]"></a>NAFE_setChannel</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, bsp_nafe11388.o(.text.NAFE_setChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = NAFE_setChannel &rArr; NAFE_sendCmdBlock &rArr; NAFE_HAL_sendCmdBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sendCmdBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_startSample
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_init
</UL>

<P><STRONG><a name="[86]"></a>NAFE_writeRegBlock</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, bsp_nafe11388.o(.text.NAFE_writeRegBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = NAFE_writeRegBlock &rArr; NAFE_HAL_writeRegBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_writeRegBlock
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_combCmdForAccessRegs
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_init
</UL>

<P><STRONG><a name="[8e]"></a>NAFE_sendCmdBlock</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_nafe11388.o(.text.NAFE_sendCmdBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NAFE_sendCmdBlock &rArr; NAFE_HAL_sendCmdBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_sendCmdBlock
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_combCmdForInstructionCmds
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_terminateContiSample
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_triggerSample
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_setChannel
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_resetDevice
</UL>

<P><STRONG><a name="[89]"></a>NAFE_HAL_delay</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, bsp_nafe11388.o(.text.NAFE_HAL_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NAFE_HAL_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_terminateContiSample
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mccrBlock
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcmrBlock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sccrBlock
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_scsrBlock
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_resetDevice
</UL>

<P><STRONG><a name="[8d]"></a>NAFE_combCmdForAccessRegs</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, bsp_nafe11388.o(.text.NAFE_combCmdForAccessRegs))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NAFE_combCmdForAccessRegs
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_writeRegBlock
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
</UL>

<P><STRONG><a name="[90]"></a>NAFE_scsrBlock</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, bsp_nafe11388.o(.text.NAFE_scsrBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NAFE_scsrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_triggerSample
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_delay
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_startSample
</UL>

<P><STRONG><a name="[8f]"></a>NAFE_sccrBlock</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, bsp_nafe11388.o(.text.NAFE_sccrBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NAFE_sccrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_terminateContiSample
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_triggerSample
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_delay
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_startSample
</UL>

<P><STRONG><a name="[8c]"></a>NAFE_mcsrBlock</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, bsp_nafe11388.o(.text.NAFE_mcsrBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NAFE_mcsrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_triggerSample
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_startSample
</UL>

<P><STRONG><a name="[8b]"></a>NAFE_mcmrBlock</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, bsp_nafe11388.o(.text.NAFE_mcmrBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = NAFE_mcmrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_triggerSample
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_delay
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_startSample
</UL>

<P><STRONG><a name="[87]"></a>NAFE_mccrBlock</STRONG> (Thumb, 414 bytes, Stack size 40 bytes, bsp_nafe11388.o(.text.NAFE_mccrBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = NAFE_mccrBlock &rArr; NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_terminateContiSample
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_formatResultArray
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_triggerSample
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_delay
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_readRegBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_startSample
</UL>

<P><STRONG><a name="[88]"></a>NAFE_triggerSample</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, bsp_nafe11388.o(.text.NAFE_triggerSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = NAFE_triggerSample &rArr; NAFE_sendCmdBlock &rArr; NAFE_HAL_sendCmdBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sendCmdBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mccrBlock
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcmrBlock
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcsrBlock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sccrBlock
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_scsrBlock
</UL>

<P><STRONG><a name="[80]"></a>NAFE_formatResultArray</STRONG> (Thumb, 476 bytes, Stack size 64 bytes, bsp_nafe11388.o(.text.NAFE_formatResultArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = NAFE_formatResultArray &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mccrBlock
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcmrBlock
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mcsrBlock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sccrBlock
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_scsrBlock
</UL>

<P><STRONG><a name="[8a]"></a>NAFE_terminateContiSample</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bsp_nafe11388.o(.text.NAFE_terminateContiSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = NAFE_terminateContiSample &rArr; NAFE_sendCmdBlock &rArr; NAFE_HAL_sendCmdBlock &rArr; SPI_ReadWriteByte &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_HAL_delay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sendCmdBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_mccrBlock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sccrBlock
</UL>

<P><STRONG><a name="[91]"></a>NAFE_combCmdForInstructionCmds</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, bsp_nafe11388.o(.text.NAFE_combCmdForInstructionCmds))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NAFE_combCmdForInstructionCmds
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAFE_sendCmdBlock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
